<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunduan.dao.SysDeptMapper" >
  <resultMap id="BaseResultMap" type="com.yunduan.model.SysDept" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="level" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="seq" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="parent_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="operator" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="operater_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="operater_ip" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yunduan.model.SysDept" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="level" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="seq" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="parent_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="operator" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="operater_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="operater_ip" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="remark" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, level, seq, parent_id, operator, operater_time, operater_ip
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_dept
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_dept
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.yunduan.model.SysDept" >
    insert into sys_dept (id, name, level, 
      seq, parent_id, operator, 
      operater_time, operater_ip, remark
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, 
      #{seq,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{operator,jdbcType=VARCHAR}, 
      #{operaterTime,jdbcType=TIMESTAMP}, #{operaterIp,jdbcType=VARCHAR}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yunduan.model.SysDept" >
    insert into sys_dept
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="operaterTime != null" >
        operater_time,
      </if>
      <if test="operaterIp != null" >
        operater_ip,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operaterTime != null" >
        #{operaterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operaterIp != null" >
        #{operaterIp,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.yunduan.model.SysDept" >
    update sys_dept
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="seq != null" >
        seq = #{seq,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operaterTime != null" >
        operater_time = #{operaterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operaterIp != null" >
        operater_ip = #{operaterIp,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yunduan.model.SysDept" >
    update sys_dept
    set name = #{name,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      seq = #{seq,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      operater_time = #{operaterTime,jdbcType=TIMESTAMP},
      operater_ip = #{operaterIp,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunduan.model.SysDept" >
    update sys_dept
    set name = #{name,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      seq = #{seq,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      operater_time = #{operaterTime,jdbcType=TIMESTAMP},
      operater_ip = #{operaterIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>